---
title: ''
page_classes: planet
---

:ruby
  require 'sanitize'

  # Maxinum number of recent posts
  max_recent = 20

  # Posts *must* contain a case-insensitive keyword defined in data/site.yml as
  # filter_keyword

- content_for :head do
  %link(href="/feed.xml" rel="alternate" title="Atom feed" type="application/atom+xml")

%section.feed.syndicated.articles
  - old_time = Time.now

  - planet_feeds.take(max_recent).each do |entry|
    :ruby
      old_date = old_time.to_date
      old_time = entry.published
      published_date = entry.published.to_date
      body = rewrite_uris (entry.content || entry.summary), entry['feed_url']

      next unless body[/#{data.site.filter_keyword}/i] if defined?(data.site.filter_keyword)
      next unless body[/#{entry['filter']}/i] if defined?(entry['filter'])

    - if (old_date != published_date) || (old_date == Time.now.to_date)
      %h1.datetime
        %time.ago{ datetime: entry.published.to_time.iso8601 }
        %span.date= entry.published.strftime('%1d %h %Y')

    %article.post.hentry

      %header.post-header

        %h2.post-title.entry-title{ id: (entry.title || '').parameterize }
          = link_to entry.title, entry.url, {rel: 'nofollow'}

        %header.post-meta
          = link_to entry[:feed_url], {rel: 'nofollow'} do

            - if entry[:feed_image]
              - rounded = 'rounded' if entry[:image_rounded] != false
              %span.avatar{ class: "#{rounded}" }
                = image_tag "planet/#{entry[:feed_image]}"

            %span.byline
              %span.hidden From
              %span.author.vcard= entry[:feed_name]

      %section.post-content.entry-content
        = Sanitize.clean(demote_headings(body), Sanitize::Config::RELAXED)

      %footer.post-meta-footer

        %span.byline
          %span.from From
          %span.author.vcard
            = link_to entry[:feed_title], entry.url, {rel: 'nofollow'}

        &mdash;

        %time.published{ datetime:entry.published.iso8601 }
          = entry.published.strftime('%Y-%m-%d %1H:%m')

- content_for :tail do
  :coffee
    do $('time.ago').timeago
